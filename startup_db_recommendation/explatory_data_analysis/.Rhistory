str(data[, 1:13 ])
# show columns with na
na = lapply(data, function(x) sum(ifelse(is.na(x) | x == "" | x == "not found", TRUE, FALSE)))
na[na > 0]
data$Founded
hist(data$Founded, breaks = 50)
sqrt(data$Founded)
hist(sqrt(data$Founded), breaks = 50)
hist(data$Founded, breaks = 50)
hist((data$Founded)^(1/3), breaks = 50)
hist((data$Founded)^(1/2), breaks = 50)
hist((data$Founded)^(1/5), breaks = 50)
hist((data$Founded)^(1/10), breaks = 50)
hist((data$Founded)^(1/12), breaks = 50)
hist(data$Founded, breaks = 50)
data[data$Founded <= 1980]
data[data$Founded <= 1980,]
data[data$Founded <= 1980,][["CompanySize", "Founded", "funding_round", "money_raised_float"]]
data[data$Founded <= 1980,]["CompanySize", "Founded", "funding_round", "money_raised_float"]
data[data$Founded <= 1980,][["CompanySize", "Founded", "funding_round", "money_raised_float"]]
data[data$Founded <= 1980,][,["CompanySize", "Founded", "funding_round", "money_raised_float"]]
data[data$Founded <= 1980,c("CompanySize", "Founded", "funding_round", "money_raised_float")]
data[data$Founded <= 1980,c("CompanyName","CompanySize", "Founded", "funding_round", "money_raised_float")]
data[, 13:]
data[, 13:20]
data[, 13:36]
data.shape
data.shape()
data.shape
ncol(data)
data[, 30:47]
data[, 32:46]
lapply(data[, 32:46], function(x) sum(x) )
industries = lapply(data[, 32:46], function(x) sum(x) )
barplot(counts, main = "Industries", las = 2)
counts = lapply(data[, 32:46], function(x) sum(x) )
barplot(counts, main = "Industries", las = 2)
counts
type(counts)
class(counts)
table(counts)
counts[0]
counts[1]
data.frame(counts)
coutns = data.frame(counts)
barplot(counts, main = "Industries", las = 2)
counts = data.frame(counts)
barplot(counts, main = "Industries", las = 2)
counts
barplot(counts
barplot(counts, main = "Industries", las = 2)
barplot(counts, main = "Industries", las = 2)
counts
counts.T
counts.Transpose
counts
colnames(counts)
ggplot(counts, aes(x = colnames(counts), y = counts))
t(counts)
barplot(t(counts))
barplot(t(counts), la = 2)
barplot(t(counts), las = 2)
t(counts)
counts = data.frame(t(counts))
counts
counts = data.frame(t(counts))
barplot(counts, las = 2)
counts
counts = data.frame(t(counts))
barplot(counts, las = 2)
counts
barplot(counts, las = 2)
barplot(counts, las = 2)
counts, las = 2)
counts
ggplot(counts, aes(y = t.counts))
counts = lapply(data[, 32:46], function(x) sum(x) )
table(counts)
counts
barplot(counts, las = 2)
table(counts)
barplot(table(counts), las = 2)
counts
colnames(counts)
counts = data[, 32:46] %>%
aggreate(sum)
counts = data[, 32:46] %>%
aggregate(sum)
counts = data[, 32:46] %>%
summarise(sum)
counts = data[, 32:46] %>%
summarise(.,sum)
counts = data[, 32:46] %>%
summarise_each(funs(sum))
counts
barplot(counts, las = 2)
barplot(t(counts), las = 2)
ggplot(counts, aes(y = t.counts)) +
geom_bar()
ggplot(counts, aes(y = counts)) +
geom_bar()
counts
table(counts)
ggplot(counts, aes(x= colnames(counts), y = counts)) +
geom_bar()
colnames(counts)
counts
counts.T = t(counts)
counts.T
barplot(counts.T)
counts.T
counts.T = data.frame(t(counts))
counts.T
ggplot(counts, aes(x= t.counts)) +
geom_bar()
ggplot(counts.T, aes(x= t.counts)) +
geom_bar()
counts.T
ggplot(counts.T, aes(x= t.counts.)) +
geom_bar()
counts.T %>%
arrange(t.counts.)
counts.T %>%
arrange(t.counts.) %>%
ggplot(., aes(x = t.counts.)) +
geom_bar()
counts.T %>%
arrange(t.counts.) %>%
ggplot(., aes(x = t.counts.)) +
geom_bar()
counts.T
counts.T %>%
arrange(t.counts.,desc) %>%
ggplot(., aes(x = t.counts.)) +
geom_bar()
ggplot(counts.T, aes(t.counts.)) +
geom_bar()
barplot(counts.T)
ggplot(counts.T, aes(t.counts.)) +
geom_bar()
counts.T
rownames(counts.T)
counts.T = data.frame(t(counts), rownames(counts.T))
counts.T
counts = lapply(data[, 32:46], function(x) sum(x) )
counts = data[, 32:46] %>%
summarise_each(funs(sum))
counts.T = data.frame(t(counts), rownames(t(counts)))
counts.T
counts.T = data.frame(counts = t(counts), indutries = rownames(t(counts) ))
counts.T
counts.T %>%
arrange(desc(counts)) %>%
ggplot(., aes(x = t.counts.)) +
geom_bar()
counts.T %>%
arrange(desc(counts)) %>%
ggplot(., aes(x = industries, y = counts )) +
geom_bar()
counts.T %>%
arrange(desc(counts))
counts.T = data.frame(counts = t(counts), indutries = rownames(t(counts) ))
counts.T %>%
arrange(desc(counts)) %>%
ggplot(., aes(x = industries, y = counts )) +
geom_bar()
counts.T = data.frame(total = t(counts), indutries = rownames(t(counts) ))
counts.T %>%
arrange(desc(total)) %>%
ggplot(., aes(x = industries, y = total )) +
geom_bar()
counts.T %>%
arrange(desc(total)) %>%
ggplot(., aes(x = industries, y = total )) +
geom_bar(stat = "identity")
counts.T %>%
arrange(desc(total)) %>%
ggplot(aes(x = industries, y = total )) +
geom_bar(stat = "identity")
counts.T %>%
arrange(desc(total)) %>%
ggplot(.,aes(x = industries, y = total )) +
geom_bar(stat = "identity")
counts.T
counts.T = data.frame(total = t(counts), industries = rownames(t(counts) ))
counts.T %>%
arrange(desc(total)) %>%
ggplot(.,aes(x = industries, y = total )) +
geom_bar(stat = "identity")
counts.T %>%
arrange(desc(total))
counts.T %>%
arrange(desc(total)) %>%
ggplot(.,aes(x = industries, y = total )) +
geom_bar(stat = "identity")
counts.T %>%
ggplot(.,aes(x = reorder(industries, -total), y = total )) +
geom_bar(stat = "identity")
counts.T %>%
ggplot(.,aes(x = reorder(industries, -total), y = total )) +
geom_bar(stat = "identity") +
theme(plot.title = element_text(hjust = 0.5, size=14))
counts.T %>%
ggplot(.,aes(x = reorder(industries, -total), y = total )) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
```{r, fig.height = 4, fig.show='hold', fig.align='center'}
```{r, fig.height = 4, fig.width = 4,, fig.show='hold', fig.align='center'}
# store column sum in a list
counts = lapply(data[, 32:46], function(x) sum(x) )
counts = data[, 32:46] %>%
summarise_each(funs(sum))
counts.T = data.frame(total = t(counts), industries = rownames(t(counts) ))
counts.T %>%
ggplot(.,aes(x = reorder(industries, -total), y = total )) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# store column sum in a list
counts = lapply(data[, 32:46], function(x) sum(x) )
counts = data[, 32:46] %>%
summarise_each(funs(sum))
counts.T = data.frame(total = t(counts), industries = rownames(t(counts) ))
counts.T %>%
ggplot(.,aes(x = reorder(industries, -total), y = total )) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# store column sum in a list
counts = lapply(data[, 32:46], function(x) sum(x) )
counts = data[, 32:46] %>%
summarise_each(funs(sum))
counts.T = data.frame(total = t(counts), industries = rownames(t(counts) ))
counts.T %>%
ggplot(.,aes(x = reorder(industries, -total), y = total )) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# store column sum in a list
counts = lapply(data[, 32:46], function(x) sum(x) )
counts = data[, 32:46] %>%
summarise_each(funs(sum))
counts.T = data.frame(total = t(counts), industries = rownames(t(counts) ))
counts.T %>%
ggplot(.,aes(x = reorder(industries, -total), y = total )) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
counts.T %>%
ggplot(.,aes(x = reorder(industries, -total), y = total )) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("10 Top Industries") +
theme(plot.title = element_text(hjust = 0.5, size=14))
counts.T %>%
ggplot(.,aes(x = reorder(industries, -total), y = total )) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("10 Top Industries") +
theme(plot.title = element_text(hjust = 0.5, size=14)) +
theme(axis.title.x=element_blank()) +
ylab("Number of Companies")
counts.T[:10,] %>%
counts.T[1:10,] %>%
ggplot(.,aes(x = reorder(industries, -total), y = total )) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("10 Top Industries") +
theme(plot.title = element_text(hjust = 0.5, size=14)) +
theme(axis.title.x=element_blank()) +
ylab("Number of Companies")
hist(data$Founded[-c(146, 214), ], main = "Year Founded", breaks = 50)
hist(data$Founded[-c(146, 214)], main = "Year Founded", breaks = 50)
data[data$Founded <= 1990,c("CompanyName","CompanySize", "Founded", "funding_round", "money_raised_float")]
as.numeric(rownames(outliers))
outliers = data[data$Founded <= 1990,c("CompanyName","CompanySize", "Founded", "funding_round", "money_raised_float")]
as.numeric(rownames(outliers))
outliers.index = as.numeric(rownames(outliers))
hist(data$Founded[-outliers.index], main = "Year Founded", breaks = 50)
hist(data$Founded, main = "Year Founded", breaks = 50)
# check who are the outliers
outliers = data[data$Founded <= 1990,c("CompanyName","CompanySize", "Founded", "funding_round", "money_raised_float")]
outliers
# store index of outliers
outliers.index = as.numeric(rownames(outliers))
# plot without the outliers
hist(data$Founded[-outliers.index], main = "Year Founded", breaks = 50)
data[data$CompanySize == "10,001+", c("CompanyName", "funding_round", "CompanySize","money_raised_float")]
data[data$CompanySize == "10,001+", c("CompanyName", "Founded", "CompanySize","money_raised_float")]
barplot(counts, main = "Company size", las=2)
# counts = table(data$CompanySize)
# counts
# str(data$CompanySize)
# clean up - factors
data$CompanySize = revalue(data$CompanySize, c("Nov-50"="11-50", "10-Jan"="1-10"))
# clean up - the level orders
data$CompanySize = factor(data$CompanySize, levels = c("1-10", "11-50","51-200","201-500", "501-1000",
"1001-5000","5001-10,000","10,001+"))
counts = table(data$CompanySize)
counts
barplot(counts, main = "Company size", las=2)
# check the outliers
data[data$CompanySize == "10,001+", c("CompanyName", "Founded", "CompanySize","money_raised_float")]
nrow(data)
ncol(data)
ggplot(data = data, aes(x= CompanySize, y = Founded)) +
geom_jitter()
outliers.index = as.numeric(rownames(outliers))
ggplot(data = data[-outliers.index], aes(x= CompanySize, y = Founded)) +
geom_jitter()
outliers = data[data$Founded <= 1990,]
outliers.index = as.numeric(rownames(outliers))
ggplot(data = data[-outliers.index], aes(x= CompanySize, y = Founded)) +
geom_jitter()
outliers.index
ggplot(data = data[-outliers.index], aes(x= CompanySize, y = Founded)) +
geom_jitter()
ggplot(data[-outliers.index], aes(x= CompanySize, y = Founded)) +
geom_jitter()
ggplot(data[-outliers.index,], aes(x= CompanySize, y = Founded)) +
geom_jitter()
# remove outliers (companies founded before 1990)
outliers = data[data$Founded <= 1990,]
outliers.index = as.numeric(rownames(outliers))
ggplot(data[-outliers.index,], aes(x= Founded, y = CompanySize)) +
geom_jitter()
# remove outliers (companies founded before 1990)
outliers = data[data$Founded <= 1990,]
outliers.index = as.numeric(rownames(outliers))
ggplot(data[-outliers.index,], aes(x= Founded, y = CompanySize)) +
geom_jitter() +
ggtitle("Year Founded x Company Size") +
theme(plot.title = element_text(hjust = 0.5, size=14))
ggplot(data[-outliers.index,], aes(x= money_raised_float, y = CompanySize)) +
geom_jitter() +
ggtitle("Year Founded x Company Size") +
theme(plot.title = element_text(hjust = 0.5, size=14))
ggplot(data[-outliers.index,], aes(x= money_raised_float, y = CompanySize)) +
geom_jitter() +
ggtitle("Money Raised x Company Size") +
theme(plot.title = element_text(hjust = 0.5, size=14))
# remove outliers
outliers = data[data$money_raised_float > 200, ]
outliers.index = as.numeric(rownames(outliers))
ggplot(data[-outliers.index,], aes(x= money_raised_float, y = CompanySize)) +
geom_jitter() +
ggtitle("Money Raised x Company Size") +
theme(plot.title = element_text(hjust = 0.5, size=14))
# remove outliers
outliers = data[data$money_raised_float > 200, ]
outliers.index = as.numeric(rownames(outliers))
# plot
ggplot(data[-outliers.index,], aes(x= money_raised_float, y = funding_round)) +
geom_jitter() +
ggtitle("Money Raised x Company Size") +
theme(plot.title = element_text(hjust = 0.5, size=14))
par(mfrow=c(2,1))
money = data %>%
group_by(funding_round) %>%
summarize(sum = sum(money_raised_float), mean = mean(money_raised_float), sd = sd(money_raised_float))
money
counts = money$sum
names(counts) = money$funding_round
barplot(counts, las = 2, main = "Total Money Raised by Funding Round")
counts = money$mean
names(counts) = money$funding_round
barplot(counts, las = 2, main = "Average Money Raised by Funding Round")
data[data$Healthcare_health == 1]
data[data$Healthcare_health == 1,]
ggplot() + geom_polygon(data = all_states, aes(x=long, y = lat, group = group),
colour="white", fill="grey10") +
coord_fixed(1.3) +
geom_jitter(data = data[data$Healthcare_health == 1,], mapping = aes(
x = longitude, y = latitude, color = "Orangered" ,size = money_raised_float),
alpha = 0.4, width = 0.7, height = 0.7) +
scale_size(range = c(2, 12)) +
ggtitle("Company Location with Money Raised") +
theme(plot.title = element_text(hjust = 0.5, size=18)) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank())
# Set the map
all_states <- map_data("state")
# plot
ggplot() + geom_polygon(data = all_states, aes(x=long, y = lat, group = group),
colour="white", fill="grey10") +
coord_fixed(1.3) +
geom_jitter(data = data[data$Healthcare_health == 1,], mapping = aes(
x = longitude, y = latitude, color = "Orangered" ,size = money_raised_float),
alpha = 0.4, width = 0.7, height = 0.7) +
scale_size(range = c(2, 12)) +
ggtitle("Company Location with Money Raised") +
theme(plot.title = element_text(hjust = 0.5, size=18)) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank())
# Set the map
all_states <- map_data("state")
# plot
ggplot() + geom_polygon(data = all_states, aes(x=long, y = lat, group = group),
colour="white", fill="grey10") +
coord_fixed(1.3) +
geom_jitter(data = data[data$Marketing.and.Advertising == 1,], mapping = aes(
x = longitude, y = latitude, color = "Orangered" ,size = money_raised_float),
alpha = 0.4, width = 0.7, height = 0.7) +
scale_size(range = c(2, 12)) +
ggtitle("Company Location with Money Raised") +
theme(plot.title = element_text(hjust = 0.5, size=18)) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank())
# Set the map
all_states <- map_data("state")
# plot
ggplot() + geom_polygon(data = all_states, aes(x=long, y = lat, group = group),
colour="white", fill="grey10") +
coord_fixed(1.3) +
geom_jitter(data = data[data$Healthcare_health == 1,], mapping = aes(
x = longitude, y = latitude, color = "Orangered" ,size = money_raised_float),
alpha = 0.4, width = 0.7, height = 0.7) +
scale_size(range = c(2, 12)) +
ggtitle("Company Location with Money Raised") +
theme(plot.title = element_text(hjust = 0.5, size=18)) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank())
# Set the map
all_states <- map_data("state")
# plot
ggplot() + geom_polygon(data = all_states, aes(x=long, y = lat, group = group),
colour="white", fill="grey10") +
coord_fixed(1.3) +
geom_jitter(data = data[data$Marketing.and.Advertising == 1,], mapping = aes(
x = longitude, y = latitude, color = "blue" ,size = money_raised_float),
alpha = 0.4, width = 0.7, height = 0.7) +
scale_size(range = c(2, 12)) +
ggtitle("Company Location with Money Raised") +
theme(plot.title = element_text(hjust = 0.5, size=18)) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank())
# Set the map
all_states <- map_data("state")
# plot
ggplot() + geom_polygon(data = all_states, aes(x=long, y = lat, group = group),
colour="white", fill="grey10") +
coord_fixed(1.3) +
geom_jitter(data = data[data$Marketing.and.Advertising == 1,], mapping = aes(
x = longitude, y = latitude, color = "orangered" ,size = money_raised_float),
alpha = 0.4, width = 0.7, height = 0.7) +
scale_size(range = c(2, 12)) +
ggtitle("Company Location with Money Raised") +
theme(plot.title = element_text(hjust = 0.5, size=18)) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank())
# Set the map
all_states <- map_data("state")
# plot
ggplot() + geom_polygon(data = all_states, aes(x=long, y = lat, group = group),
colour="white", fill="grey10") +
coord_fixed(1.3) +
geom_jitter(data = data[data$Financial.Services == 1,], mapping = aes(
x = longitude, y = latitude, color = "orangered" ,size = money_raised_float),
alpha = 0.4, width = 0.7, height = 0.7) +
scale_size(range = c(2, 12)) +
ggtitle("Company Location with Money Raised") +
theme(plot.title = element_text(hjust = 0.5, size=18)) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank())
ggplot(data = data, aes(x= CompanySize, y = money_raised_float)) +
geom_jitter(alpha = 0.6) +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot() + geom_polygon(data = all_states, aes(x=long, y = lat, group = group),
colour="white", fill="grey10") +
coord_fixed(1.3) +
geom_jitter(data = data[data$Entertainment == 1,], mapping = aes(
x = longitude, y = latitude, color = "Orangered" ,size = money_raised_float),
alpha = 0.4, width = 0.7, height = 0.7) +
scale_size(range = c(2, 12)) +
ggtitle("Company Location with Money Raised") +
theme(plot.title = element_text(hjust = 0.5, size=18)) +
labs(x=NULL, y=NULL) +
theme(panel.border = element_blank())
names(counts) = money$CompanySize
money = data %>%
group_by(CompanySize) %>%
summarize(mean = mean(money_raised_float), sd = sd(money_raised_float))
counts = money$mean
names(counts) = money$CompanySize
barplot(counts, las = 2, main = "Average Money Raised by Company Size")
# counts = table(data$CompanySize)
# counts
# str(data$CompanySize)
# clean up - factors
data$CompanySize = revalue(data$CompanySize, c("Nov-50"="11-50", "10-Jan"="1-10"))
# clean up - the level orders
data$CompanySize = factor(data$CompanySize, levels = c("1-10", "11-50","51-200","201-500", "501-1000",
"1001-5000","5001-10,000","10,001+"))
counts = table(data$CompanySize)
counts
barplot(counts, main = "Company size", las=2)
# check the outliers
data[data$CompanySize == "10,001+", c("CompanyName", "Founded", "CompanySize","money_raised_float")]
summary(data$money_raised_float)
hist(data$money_raised_float, breaks = 40, main = "Money Raised")
# check the outliers
data[data$money_raised_float > 200, c("CompanyName", "funding_round", "CompanySize","money_raised_float")]
# store column sum in a list
counts = data[, 32:46] %>%
summarise_each(funs(sum))
# transpose the dataframe for barplot
counts.T = data.frame(total = t(counts), industries = rownames(t(counts) ))
# plot in a descending order
counts.T[1:10,] %>%
ggplot(.,aes(x = reorder(industries, -total), y = total )) +
geom_bar(stat = "identity") +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
ggtitle("Top 10 Industries") +
theme(plot.title = element_text(hjust = 0.5, size=14)) +
theme(axis.title.x=element_blank()) +
ylab("Number of Companies")
